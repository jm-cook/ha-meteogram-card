import{css as t,LitElement as e,html as i}from"lit";import{property as a,state as r,customElement as n}from"lit/decorators.js";function s(t,e,i,a){var r,n=arguments.length,s=n<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,i):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,i,a);else for(var o=t.length-1;o>=0;o--)(r=t[o])&&(s=(n<3?r(s):n>3?r(e,i,s):r(e,i))||s);return n>3&&s&&Object.defineProperty(e,i,s),s}var o;"function"==typeof SuppressedError&&SuppressedError;let d=o=class extends e{constructor(){super(...arguments),this.title="",this.chartLoaded=!1,this.meteogramError="",this.renderPending=!1,this.errorCount=0,this.lastErrorTime=0,this.lastErrorMessage="",this.iconCache=new Map,this.iconBasePath="https://raw.githubusercontent.com/jm-cook/ha-meteogram-card/main/icons/",this.hasRendered=!1,this.svg=null,this._resizeObserver=null,this._lastWidth=0,this._lastHeight=0,this._isInitialized=!1,this.lastDrawTime=0,this.REDRAW_THROTTLE_MS=3e5}async getIconSVG(t){if(this.iconCache.has(t))return this.iconCache.get(t);try{const e=await fetch(`${this.iconBasePath}${t}.svg`);if(!e.ok)throw new Error(`Failed to load icon: ${t}`);const i=await e.text();return this.iconCache.set(t,i),i}catch(e){return console.error(`Error loading icon ${t}:`,e),""}}setConfig(t){t.title&&(this.title=t.title),void 0!==t.latitude&&(this.latitude=t.latitude),void 0!==t.longitude&&(this.longitude=t.longitude)}static getConfigElement(){return document.createElement("meteogram-card-editor")}static getStubConfig(){return{title:"Weather Forecast"}}connectedCallback(){super.connectedCallback(),this._isInitialized=!1,this._setupResizeObserver(),setTimeout(()=>{this.hasRendered&&this.chartLoaded?this.drawMeteogram():this.loadD3AndDraw()},10)}disconnectedCallback(){this._teardownResizeObserver(),this.cleanupChart(),super.disconnectedCallback()}render(){return i`
      <ha-card>
        ${this.title?i`<div class="card-header">${this.title}</div>`:""}
        <div class="card-content">
          ${this.meteogramError?i`<div class="error">${this.meteogramError}</div>`:i`<div id="chart"></div>`}
        </div>
      </ha-card>
    `}_setupResizeObserver(){this._resizeObserver||(this._resizeObserver=new ResizeObserver(this._onResize.bind(this))),setTimeout(()=>{var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("#chart");e&&this._resizeObserver&&this._resizeObserver.observe(e)},100)}_onResize(t){if(0===t.length)return;const e=t[0];(Math.abs(e.contentRect.width-this._lastWidth)>.05*this._lastWidth||Math.abs(e.contentRect.height-this._lastHeight)>.1*this._lastHeight)&&(this._lastWidth=e.contentRect.width,this._lastHeight=e.contentRect.height,this.drawMeteogram())}_teardownResizeObserver(){this._resizeObserver&&(this._resizeObserver.disconnect(),this._resizeObserver=null)}firstUpdated(t){this.loadD3AndDraw(),this.hasRendered=!1}updated(t){this.chartLoaded&&(t.has("latitude")||t.has("longitude")||t.has("hass")||!this.hasRendered)&&(this._checkAndUpdateLocation(),setTimeout(()=>this.drawMeteogram(),0)),!this._isInitialized&&this.shadowRoot&&(this._isInitialized=!0,this.chartLoaded&&setTimeout(()=>{var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("#chart");e&&""===e.innerHTML&&this.drawMeteogram()},100))}_checkAndUpdateLocation(){if(this.hass&&(void 0===this.latitude||void 0===this.longitude)){const t=this.hass.config||{};void 0!==t.latitude&&void 0!==t.longitude&&(this.latitude=t.latitude,this.longitude=t.longitude,console.debug(`Using HA location: ${this.latitude}, ${this.longitude}`))}}cleanupChart(){var t;if(this.svg){try{this.svg.selectAll("*").remove()}catch(t){console.debug("Error cleaning up chart:",t)}this.svg=null}const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("#chart");e&&(e.innerHTML="")}async loadD3AndDraw(){if(window.d3)this.chartLoaded=!0,this.drawMeteogram();else try{await new Promise((t,e)=>{const i=document.createElement("script");i.src="https://cdn.jsdelivr.net/npm/d3@7/dist/d3.min.js",i.async=!0,i.onload=()=>t(),i.onerror=()=>e(new Error("Failed to load D3.js")),document.head.appendChild(i)}),this.chartLoaded=!0,this.drawMeteogram()}catch(t){this.meteogramError=`Failed to load D3.js: ${t}`,console.error(t)}}async drawMeteogram(){if(this.renderPending)return;const t=Date.now();if(!(t-this.lastDrawTime<this.REDRAW_THROTTLE_MS&&this.hasRendered&&this._isInitialized)){this.renderPending=!0,this.lastDrawTime=t;try{await this._drawMeteogram()}finally{this.renderPending=!1}}}async _drawMeteogram(){var t;const e=Date.now();if(this.meteogramError&&e-this.lastErrorTime<6e4)return void this.errorCount++;if(this.meteogramError="",!window.d3)return void this.setError("D3.js library not loaded.");this.cleanupChart(),await new Promise(t=>setTimeout(t,0));const i=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("#chart");if(!i)return console.error("Chart container not found in DOM"),void(this.meteogramError="Unable to render chart. Please refresh.");this._isInitialized||window.addEventListener("location-changed",()=>{setTimeout(()=>{if(this.isConnected&&this.shadowRoot){const t=this.shadowRoot.querySelector("#chart");t&&""===t.innerHTML&&this.chartLoaded&&this.drawMeteogram()}},100)});try{const t=i.parentElement,e=t?t.clientWidth:i.offsetWidth||350,a=t?t.clientHeight:i.offsetHeight||180,r=Math.min(.95*window.innerWidth,1200),n=Math.max(Math.min(e,r),300),s=Math.min(.7*window.innerHeight,520),o=.5*n,d=Math.min(o,a,s);this._lastWidth=e,this._lastHeight=a;const l=await this.fetchWeatherData();this.svg=window.d3.select(i).append("svg").attr("width","100%").attr("height","100%").attr("viewBox",`0 0 ${n+140} ${d+160}`).attr("preserveAspectRatio","xMidYMid meet"),this.renderMeteogram(this.svg,l,n,d),this.hasRendered=!0,this.errorCount=0,this.lastErrorMessage="",this._setupResizeObserver()}catch(t){this.setError(`Failed to render chart: ${t.message}`)}}setError(t){const e=Date.now();t===this.lastErrorMessage?(this.errorCount++,e-this.lastErrorTime>1e4&&(this.meteogramError=`${t} (occurred ${this.errorCount} times)`,this.lastErrorTime=e)):(this.errorCount=1,this.meteogramError=t,this.lastErrorMessage=t,this.lastErrorTime=e,console.error("Meteogram error:",t))}async fetchWeatherData(){if(void 0===this.latitude||void 0===this.longitude)throw new Error("Coordinates not configured and couldn't be retrieved from Home Assistant");const t=`coords_${this.latitude.toFixed(3)},${this.longitude.toFixed(3)}`,e=(new Date).getTime(),i=o.weatherDataCache.get(t);if(i&&e-i.timestamp<o.CACHE_DURATION_MS)return console.debug("Using cached weather data"),i.data;console.debug("Fetching fresh weather data");try{const i=await this.fetchFromMetNoAPI();return o.weatherDataCache.set(t,{data:i,timestamp:e}),i}catch(t){if(i)return console.warn("Data fetch failed, using expired cache data as fallback",t),i.data;throw t}}async fetchFromMetNoAPI(){if(void 0===this.latitude||void 0===this.longitude)throw new Error("Coordinates not provided for Met.no API");const t=await fetch(`https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=${this.latitude}&lon=${this.longitude}`,{headers:{"User-Agent":"ha-meteogram-card/1.0 github.com/jm-cook/ha-meteogram-card"}});if(!t.ok)throw new Error(`Weather API returned ${t.status} ${t.statusText}`);const e=(await t.json()).properties.timeseries.slice(0,48);if(!e.length)throw new Error("No data received from API.");const i=e.map(t=>new Date(t.time)),a=e.map(t=>{var e;return null!==(e=t.data.instant.details.air_temperature)&&void 0!==e?e:null}),r=e.map(t=>{var e,i,a;return null!==(a=null===(i=null===(e=t.data.next_1_hours)||void 0===e?void 0:e.details)||void 0===i?void 0:i.precipitation_amount)&&void 0!==a?a:0}),n=e.map(t=>{var e,i,a;return null!==(a=null===(i=null===(e=t.data.next_1_hours)||void 0===e?void 0:e.details)||void 0===i?void 0:i.precipitation_amount)&&void 0!==a?a:0}),s=e.map(t=>{var e;return null!==(e=t.data.instant.details.cloud_area_fraction)&&void 0!==e?e:0}),o=e.map(t=>{var e;return null!==(e=t.data.instant.details.wind_speed)&&void 0!==e?e:0}),d=e.map(t=>{var e;return null!==(e=t.data.instant.details.wind_from_direction)&&void 0!==e?e:0}),l=e.map(t=>{var e,i,a,r;return(null===(i=null===(e=t.data.next_1_hours)||void 0===e?void 0:e.summary)||void 0===i?void 0:i.symbol_code)||(null===(r=null===(a=t.data.next_6_hours)||void 0===a?void 0:a.summary)||void 0===r?void 0:r.symbol_code)||""});let h=i.length-1;for(let t=i.length-1;t>=0;t--)if(0===i[t].getMinutes()&&0===i[t].getSeconds()){h=t;break}return{time:i.slice(0,h+1),temperature:a.slice(0,h+1),rain:r.slice(0,h+1),snow:n.slice(0,h+1),cloudCover:s.slice(0,h+1),windSpeed:o.slice(0,h+1),windDirection:d.slice(0,h+1),symbolCode:l.slice(0,h+1)}}renderMeteogram(t,e,i,a){const r=window.d3,{time:n,temperature:s,rain:o,snow:d,cloudCover:l,windSpeed:h,windDirection:c,symbolCode:u}=e,g=n.length,p=70,m=70,f=i,v=a;let w=f/(g-1);const b=Math.min(w,45),x=r.scaleLinear().domain([0,g-1]).range([0,Math.min(b*(g-1),f)]);w=x(1)-x(0);const y=p-30,_=[];for(let t=0;t<g;t++)0!==t&&n[t].getDate()===n[t-1].getDate()||_.push(t);const M=[];for(let t=0;t<_.length;++t){const e=_[t],i=t+1<_.length?_[t+1]:g;M.push({start:e,end:i})}t.selectAll(".day-bg").data(M).enter().append("rect").attr("class","day-bg").attr("x",t=>m+x(t.start)).attr("y",p-42).attr("width",t=>x(Math.max(t.end-1,t.start))-x(t.start)+w).attr("height",v+55+42+24).attr("opacity",(t,e)=>e%2==0?.16:0),t.selectAll(".top-date-label").data(_).enter().append("text").attr("class","top-date-label").attr("x",t=>m+x(t)).attr("y",y).attr("text-anchor","start").text(t=>n[t].toLocaleDateString(void 0,{weekday:"short",day:"2-digit",month:"short"})),t.selectAll(".day-tic").data(_).enter().append("line").attr("class","day-tic").attr("x1",t=>m+x(t)).attr("x2",t=>m+x(t)).attr("y1",y+22).attr("y2",y+42).attr("stroke","#1a237e").attr("stroke-width",3).attr("opacity",.6);const C=t.append("g").attr("transform",`translate(${m},${p})`),E=s.filter(t=>null!==t),k=r.scaleLinear().domain([Math.floor(r.min(E)-2),Math.ceil(r.max(E)+2)]).range([v,0]),$=r.scaleLinear().domain([0,Math.max(2,r.max([...o,...d])+1)]).range([v,.65*v]);t.append("g").attr("class","xgrid").attr("transform",`translate(${m},${p})`).selectAll("line").data(r.range(g)).enter().append("line").attr("x1",t=>x(t)).attr("x2",t=>x(t)).attr("y1",0).attr("y2",v).attr("stroke","#b8c4d9").attr("stroke-width",1);const z=_.slice(1);t.append("g").attr("transform",`translate(${m},${p})`).selectAll(".twentyfourh-line").data(z).enter().append("line").attr("class","twentyfourh-line").attr("x1",t=>x(t)).attr("x2",t=>x(t)).attr("y1",0).attr("y2",v).lower();const R=.05*v,A=.2*v,T=[];for(let t=0;t<g;t++)T.push([x(t),R+A*(l[t]/100)]);for(let t=g-1;t>=0;t--)T.push([x(t),R+A*(1-l[t]/100)]);C.append("path").attr("class","cloud-area").attr("d",r.line().x(t=>t[0]).y(t=>t[1]).curve(r.curveLinearClosed)(T)),C.append("g").attr("class","grid").call(r.axisLeft(k).tickSize(-f).tickFormat("")),C.append("line").attr("x1",0).attr("x2",f).attr("y1",v).attr("y2",v).attr("stroke","#333"),C.append("g").call(r.axisLeft(k)),C.append("text").attr("class","axis-label").attr("text-anchor","middle").attr("transform",`translate(-50,${v/2}) rotate(-90)`).text("Temperature (°C)"),C.append("text").attr("class","legend").attr("x",0).attr("y",-45).text("Cloud Cover (%)"),C.append("text").attr("class","legend").attr("x",200).attr("y",-45).style("fill","orange").text("Temperature (°C)"),C.append("text").attr("class","legend").attr("x",410).attr("y",-45).style("fill","deepskyblue").text("Rain (mm)"),C.append("text").attr("class","legend").attr("x",560).attr("y",-45).style("fill","#b3e6ff").text("Snow (mm)");const D=r.line().defined(t=>null!==t).x((t,e)=>x(e)).y(t=>null!==t?k(t):0);C.append("path").datum(s).attr("class","temp-line").attr("d",D),C.selectAll(".weather-icon").data(u).enter().append("g").attr("class","weather-icon").attr("transform",(t,e)=>{const i=s[e],a=null!==i?k(i)-32-8:-999;return`translate(${x(e)-16}, ${a})`}).attr("opacity",(t,e)=>null!==s[e]?1:0).each((t,e,i)=>{const a=i[e];this.getIconSVG(t).then(t=>{t&&r.select(a).html(t)})});const S=Math.min(26,.8*w);C.selectAll(".rain-bar").data(o.slice(0,g-1)).enter().append("rect").attr("class","rain-bar").attr("x",(t,e)=>x(e)+w/2-S/2).attr("y",t=>$(t)).attr("width",S).attr("height",t=>v-$(t)),C.selectAll(".rain-label").data(o.slice(0,g-1)).enter().append("text").attr("class","rain-label").attr("x",(t,e)=>x(e)+w/2).attr("y",t=>$(t)-4).text(t=>t>0?t<1?t.toFixed(1):t.toFixed(0):"").attr("opacity",t=>t>0?1:0),C.selectAll(".snow-bar").data(d.slice(0,g-1)).enter().append("rect").attr("class","snow-bar").attr("x",(t,e)=>x(e)+w/2-S/2).attr("y",(t,e)=>$(o[e]+d[e])).attr("width",S).attr("height",t=>v-$(t));const L=p+v,H=t.append("g").attr("transform",`translate(${m},${L})`);H.append("rect").attr("class","wind-band-bg").attr("x",0).attr("y",0).attr("width",f).attr("height",45);const O=[];for(let t=0;t<g;t++)n[t].getHours()%2==0&&O.push(t);H.selectAll(".wind-band-grid").data(O).enter().append("line").attr("class","wind-band-grid").attr("x1",t=>x(t)).attr("x2",t=>x(t)).attr("y1",0).attr("y2",45).attr("stroke","#b8c4d9").attr("stroke-width",1),H.selectAll(".twentyfourh-line-wind").data(z).enter().append("line").attr("class","twentyfourh-line-wind").attr("x1",t=>x(t)).attr("x2",t=>x(t)).attr("y1",0).attr("y2",45);const P=i<400?4:2;for(let t=0;t<g-1;t+=P)if(t%P===0&&t+1<g){const e=t+P>=g-1,a=e?(n[g-1].getTime()-n[t].getTime())/36e5:2;if(e&&a<2)continue;const s=t+P;if(s<g){const e=x(t)+(x(s)-x(t))/2,a=h[t+P/2],n=c[t+P/2],o=i<400?18:23,d=i<400?30:38,l=r.scaleLinear().domain([0,Math.max(15,r.max(h)||20)]).range([o,d])(a);this.drawWindBarb(H,e,22.5,a,n,l,i<400?.7:.8)}}H.append("rect").attr("class","wind-band-outline").attr("x",0).attr("y",0).attr("width",f).attr("height",45).attr("stroke","#000").attr("stroke-width",1).attr("fill","none");const j=p+v+55+18;t.selectAll(".bottom-hour-label").data(n).enter().append("text").attr("class","bottom-hour-label").attr("x",(t,e)=>m+x(e)).attr("y",j).attr("text-anchor","middle").text((t,e)=>{const a=t.getHours();return i<400?e%6==0?String(a).padStart(2,"0"):"":i>800?e%2==0?String(a).padStart(2,"0"):"":e%3==0?String(a).padStart(2,"0"):""})}drawWindBarb(t,e,i,a,r,n,s=.8){const o=t.append("g").attr("transform",`translate(${e},${i}) rotate(${r}) scale(${s})`),d=-n/2,l=+n/2;if(a<2)return void o.append("circle").attr("class","wind-barb-calm").attr("cx",0).attr("cy",0).attr("r",4);o.append("line").attr("class","wind-barb").attr("x1",0).attr("y1",d).attr("x2",0).attr("y2",l),o.append("circle").attr("class","wind-barb-dot").attr("cx",0).attr("cy",l).attr("r",4);let h=a,c=d,u=Math.floor(h/10);h-=10*u;let g=Math.floor(h/5);h-=5*g;for(let t=0;t<u;t++,c+=7)o.append("line").attr("class","wind-barb-feather").attr("x1",0).attr("y1",c).attr("x2",12).attr("y2",c+3);for(let t=0;t<g;t++,c+=7)o.append("line").attr("class","wind-barb-half").attr("x1",0).attr("y1",c).attr("x2",6).attr("y2",c+2)}};d.styles=t`
    :host {
      display: block;
      box-sizing: border-box;
      height: 100%;
      width: 100%;
      max-width: 100%;
      max-height: 100%;
    }
    ha-card {
      display: flex;
      flex-direction: column;
      height: 100%;
      width: 100%;
      box-sizing: border-box;
      overflow: hidden;
    }
    .card-header {
      padding: 16px 16px 0 16px;
      font-size: 1.25em;
      font-weight: 500;
      line-height: 1.2;
    }
    .card-content {
      flex: 1 1 auto;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: stretch;
      padding: 0 16px 16px 16px;
      box-sizing: border-box;
      min-height: 0;
      min-width: 0;
      overflow: hidden;
    }
    #chart {
      width: 100%;
      height: 100%;
      min-height: 180px;
      box-sizing: border-box;
      overflow: hidden;
      display: flex;
      align-items: stretch;
      justify-content: stretch;
    }
    .error {
      color: var(--error-color, #b71c1c);
      padding: 16px;
    }
    .temp-line { stroke: orange; stroke-width: 3; fill: none; }
    .rain-bar { fill: deepskyblue; opacity: 0.8; }
    .snow-bar { fill: #b3e6ff; opacity: 0.8; }
    .cloud-area { fill: gray; opacity: 0.32; }
    .grid line { stroke: #b8c4d9; }
    .xgrid line { stroke: #b8c4d9; }
    .wind-band-grid { stroke: #b8c4d9; stroke-width: 1; }
    .twentyfourh-line, .day-tic { stroke: #1a237e; stroke-width: 3; stroke-dasharray:6,5; opacity: 0.6; }
    .twentyfourh-line-wind { stroke: #1a237e; stroke-width: 2.5; stroke-dasharray:6,5; opacity: 0.5; }
    .axis-label { font: 14px sans-serif; }
    .legend { font: 14px sans-serif; }
    .wind-barb { stroke: #1976d2; stroke-width:2; fill:none; }
    .wind-barb-feather { stroke: #1976d2; stroke-width:1.4; }
    .wind-barb-half { stroke: #1976d2; stroke-width:0.8; }
    .wind-barb-calm { stroke: #1976d2; fill: none; }
    .wind-barb-dot { fill: #1976d2; }
    .wind-band-bg { fill: #fff; }
    .wind-band-outline { stroke: #000; fill: none; stroke-width: 1; }
    .top-date-label { font: 16px sans-serif; fill: #333; font-weight: bold; dominant-baseline: hanging; }
    .bottom-hour-label { font: 13px sans-serif; fill: #333; }
    .rain-label { font: 13px sans-serif, #0058a3; text-anchor: middle; font-weight: bold; }
    .day-bg { fill: #e3edfa; }
  `,d.weatherDataCache=new Map,d.CACHE_DURATION_MS=18e5,s([a({type:String})],d.prototype,"title",void 0),s([a({type:Number})],d.prototype,"latitude",void 0),s([a({type:Number})],d.prototype,"longitude",void 0),s([a({attribute:!1})],d.prototype,"hass",void 0),s([r()],d.prototype,"chartLoaded",void 0),s([r()],d.prototype,"meteogramError",void 0),s([r()],d.prototype,"renderPending",void 0),s([r()],d.prototype,"errorCount",void 0),s([r()],d.prototype,"lastErrorTime",void 0),s([r()],d.prototype,"lastErrorMessage",void 0),d=o=s([n("meteogram-card")],d);class l extends HTMLElement{constructor(){super(...arguments),this._config={},this._initialized=!1,this._elements=new Map}set hass(t){this._hass=t,this._initialized&&this._updateValues()}setConfig(t){this._config=t||{},this._initialized?this._updateValues():this.render()}get config(){return this._config}connectedCallback(){this._initialized||this._initialize()}_initialize(){this.render(),this._initialized=!0}_updateValues(){var t,e,i,a;if(!this._initialized)return;const r=this._elements.get("title");r&&(r.value=this._config.title||"");const n=this._elements.get("latitude");n&&(n.value=void 0!==this._config.latitude?String(this._config.latitude):void 0!==(null===(e=null===(t=this._hass)||void 0===t?void 0:t.config)||void 0===e?void 0:e.latitude)?String(this._hass.config.latitude):"");const s=this._elements.get("longitude");s&&(s.value=void 0!==this._config.longitude?String(this._config.longitude):void 0!==(null===(a=null===(i=this._hass)||void 0===i?void 0:i.config)||void 0===a?void 0:a.longitude)?String(this._hass.config.longitude):"")}_valueChanged(t){const e=t.target;if(!this._config||!e||!e.configValue)return;let i=e.value||"";if("number"===e.type)if(""===i)i=void 0;else{const t=parseFloat(i.toString());isNaN(t)||(i=t)}else""===i&&(i=void 0);this._config=Object.assign(Object.assign({},this._config),{[e.configValue]:i}),this.dispatchEvent(new CustomEvent("config-changed",{detail:{config:this._config}}))}render(){var t,e,i,a,r,n;const s=null!==(i=null===(e=null===(t=this._hass)||void 0===t?void 0:t.config)||void 0===e?void 0:e.latitude)&&void 0!==i?i:"",o=null!==(n=null===(r=null===(a=this._hass)||void 0===a?void 0:a.config)||void 0===r?void 0:r.longitude)&&void 0!==n?n:"",d=document.createElement("div");d.innerHTML=`\n      <style>\n        ha-card {\n          padding: 16px;\n        }\n        .values {\n          padding-left: 16px;\n          margin: 8px 0;\n        }\n        .row {\n          display: flex;\n          margin-bottom: 12px;\n          align-items: center;\n        }\n        ha-textfield {\n          width: 100%;\n        }\n        .side-by-side {\n          display: flex;\n          gap: 12px;\n        }\n        .side-by-side > * {\n          flex: 1;\n        }\n        h3 {\n          font-size: 18px;\n          color: var(--primary-text-color);\n          font-weight: 500;\n          margin-bottom: 12px;\n          margin-top: 0;\n        }\n        .help-text {\n          color: var(--secondary-text-color);\n          font-size: 0.875rem;\n          margin-top: 4px;\n        }\n        .info-text {\n          color: var(--primary-text-color);\n          opacity: 0.8;\n          font-size: 0.9rem;\n          font-style: italic;\n          margin: 4px 0 16px 0;\n        }\n      </style>\n      <ha-card>\n        <h3>Meteogram Card Settings</h3>\n        \n        <div class="values">\n          <div class="row">\n            <ha-textfield\n              label="Title"\n              id="title-input"\n              .value="${this._config.title||""}"\n            ></ha-textfield>\n          </div>\n          \n          <p class="info-text">\n            Location coordinates will be used to fetch weather data directly from Met.no API.\n            ${s?"Using Home Assistant's location by default.":""}\n          </p>\n          \n          <div class="side-by-side">\n            <ha-textfield\n              label="Latitude"\n              id="latitude-input"\n              type="number"\n              step="any"\n              .value="${void 0!==this._config.latitude?this._config.latitude:s}"\n              placeholder="${s?`Default: ${s}`:""}"\n            ></ha-textfield>\n            \n            <ha-textfield\n              label="Longitude"\n              id="longitude-input"\n              type="number"\n              step="any"\n              .value="${void 0!==this._config.longitude?this._config.longitude:o}"\n              placeholder="${o?`Default: ${o}`:""}"\n            ></ha-textfield>\n          </div>\n          <p class="help-text">Leave empty to use Home Assistant's configured location</p>\n        </div>\n      </ha-card>\n    `,this.innerHTML="",this.appendChild(d),setTimeout(()=>{const t=this.querySelector("#title-input");t&&(t.configValue="title",t.addEventListener("input",this._valueChanged.bind(this)),this._elements.set("title",t));const e=this.querySelector("#latitude-input");e&&(e.configValue="latitude",e.addEventListener("input",this._valueChanged.bind(this)),this._elements.set("latitude",e));const i=this.querySelector("#longitude-input");i&&(i.configValue="longitude",i.addEventListener("input",this._valueChanged.bind(this)),this._elements.set("longitude",i))},0)}}customElements.define("meteogram-card-editor",l),window.customCards=window.customCards||[],window.customCards.push({type:"meteogram-card",name:"Meteogram Card",description:"A custom card showing a 48-hour meteogram with wind barbs."});export{d as MeteogramCard};
